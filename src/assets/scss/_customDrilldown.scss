@mixin zf-drilldown-left-right-arrows {
  .is-drilldown-submenu-parent > a {
    $defs: map-get($drilldown-arrows-defs, next);
    $offset-side: get-side($drilldown-padding, #{$global-right});

    position: relative;

    &::before {
      @include vertical-center;

      background-image: sassvg(map-get($defs, name), transparent, transparent, map-get($defs, color));
      content: '';
      height: get-side(map-get($defs, size), top);
      width: get-side(map-get($defs, size), left);
      #{$global-right}: get-side(map-get($defs, offset), #{$global-right});
    }

    &:hover:before {
      background-image: sassvg(map-get($defs, name), transparent, transparent, map-get($defs, color-hover));
    }

  }
}

@mixin foundation-drilldown-menu {

  .close-section-wrapper {
    height: $close-section-height;
    position: relative;
  }

  // Applied to the Menu container
  .is-drilldown {
    position: relative;
    overflow: hidden;

    li {
      display: block;

      @include -zf-each-breakpoint() {
        font-size: -zf-get-bp-val($drilldown-menu-font-size, $-zf-size);
      }
    }

    &.animate-height {
      transition: height 0.5s;
    }
  }

  // The top level <ul>
  .drilldown {
    a {
      @include disable-mouse-outline;
      padding: $drilldown-padding;
      background: $drilldown-item-background-color;
      color: $drilldown-item-color;
      transition: background-color $transition-speed-normal, color $transition-speed-normal;

      &:hover {
        background: $drilldown-item-background-color-hover;
        color: $drilldown-item-color-hover;
      }
    }

    // Applied to submenu <ul>s
    .is-drilldown-submenu {
      position: absolute;
      top: 0;
      #{$global-left}: 100%;
      z-index: -1;

      width: 100%;
      background: $drilldown-submenu-background;
      transition: $drilldown-transition;

      &.is-active {
        z-index: 1;
        display: block;
        transform: translateX(if($global-text-direction == ltr, -100%, 100%));
      }

      &.is-closing {
        transform: translateX(if($global-text-direction == ltr, 100%, -100%));
      }

      // Submenu item padding
      a {
        padding: $drilldown-submenu-padding;
      }
    }

    .nested.is-drilldown-submenu {
      @include menu-nested($drilldown-nested-margin);
    }

    .drilldown-submenu-cover-previous {
      min-height: 100%;
    }

    @if $drilldown-arrows {
      @include zf-drilldown-left-right-arrows;

      $defs: map-get($drilldown-arrows-defs, prev);
      $offset-side: get-side($drilldown-padding, #{$global-right});

      .js-drilldown-back > a {
        padding-#{$global-left}: $offset-side;
        position: relative;

        &::before {
          @include vertical-center;

          background-image: sassvg(map-get($defs, name), transparent, transparent, map-get($defs, color));
          content: '';
          height: get-side(map-get($defs, size), top);
          width: get-side(map-get($defs, size), left);
          #{$global-left}: get-side($drilldown-padding, #{$global-left});
        }

        &:hover::before {
          background-image: sassvg(map-get($defs, name), transparent, transparent, map-get($defs, color-hover));
        }
      }
    }
  }
}