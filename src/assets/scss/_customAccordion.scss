////
/// @group accordion
////

/// Font size of accordion titles.
/// @type Number
$accordion-title-font-size: rem-calc(12) !default;

/// Default text color for items in a Menu.
/// @type Color
$accordion-item-color: $primary-color !default;

/// Default background color on hover for items in a Menu.
/// @type Color
$accordion-item-background-hover: $light-gray !default;

/// Default padding of an accordion item.
/// @type Number | List
$accordion-item-padding: 1.25rem 1rem !default;

/// Default border color of tab content.
/// @type Color
$accordion-content-border: 1px solid $light-gray !default;

/// Adds styles for the accordion item. Apply this to the list item within an accordion ul.
@mixin accordion-item {
  &.is-active {
    a.accordion-title {
      background-color: $accordion-item-background-hover;
    }
  }
  &:first-child > :first-child {
    border-radius: $global-radius $global-radius 0 0;
  }

  &:last-child > :last-child {
    border-radius: 0 0 $global-radius $global-radius;
  }
}

/// Adds styles for the title of an accordion item. Apply this to the link within an accordion item.
@mixin accordion-title (
  $padding: $accordion-item-padding,
  $font-size: $accordion-title-font-size,
  $color: $accordion-item-color,
  $border: $accordion-content-border,
  $background-hover: $accordion-item-background-hover
) {
  @include disable-mouse-outline;
  position: relative;
  display: block;
  padding: $padding;

  border: $border;
  border-bottom: 0;

  font-size: $font-size;
  line-height: 1;
  color: $color;

  :last-child:not(.is-active) > & {
    border-bottom: $border;
    border-radius: 0 0 $global-radius $global-radius;
  }

  &:hover,
  &:focus {
    background-color: $background-hover;
  }

  @if $accordion-plusminus {
    &:hover {
      &::before {
        background-image: sassvg('icon-plus-24', $accordion-icon-bg-img-hover);
        height: get-side($accordion-bg-img-size, top);
        width: get-side($accordion-bg-img-size, right);
      }

      .is-active > &::before {
        background-image: sassvg('icon-minus-24', $accordion-icon-bg-img-hover);
        content: '';
        height: get-side($accordion-bg-img-size, top);
        width: get-side($accordion-bg-img-size, right);
      }
    }

    &::before {
      background-image: sassvg('icon-plus-24', $accordion-icon-bg-img);
      height: get-side($accordion-bg-img-size, top);
      width: get-side($accordion-bg-img-size, right);
      position: absolute;
      top: 50%;
      #{$global-right}: get-side($padding, #{$global-right});
      margin-top: 0;
      content: '';
      transform: translateY(-50%);
    }

    .is-active > &::before {
      background-image: sassvg('icon-minus-24', $accordion-icon-bg-img-hover);
      content: '';
      height: get-side($accordion-bg-img-size, top);
      width: get-side($accordion-bg-img-size, right);
    }
  }

  @else {
    &:hover {
      &::before {
        height: get-side($accordion-bg-img-size, top);
        width: get-side($accordion-bg-img-size, right);
        background-image: sassvg('icon-down-26x16', $accordion-icon-bg-img-hover);
      }

      .is-active > &::before {
        height: get-side($accordion-bg-img-size, top);
        width: get-side($accordion-bg-img-size, right);
        background-image: sassvg('icon-up-26x16', $accordion-icon-bg-img-hover);
        content: '';
      }
    }

    &::before {
      height: get-side($accordion-bg-img-size, top);
      width: get-side($accordion-bg-img-size, right);
      background-image: sassvg('icon-down-26x16', $accordion-icon-bg-img);
      position: absolute;
      top: 50%;
      #{$global-right}: get-side($padding, #{$global-right});
      margin-top: 0;
      content: '';
      transform: translateY(-50%);
    }

    .is-active > &::before {
      height: get-side($accordion-bg-img-size, top);
      width: get-side($accordion-bg-img-size, right);
      background-image: sassvg('icon-up-26x16', $accordion-icon-bg-img-hover);
      content: '';
    }
  }
}

@mixin accordion-content (
  $padding: $accordion-content-padding,
  $border: $accordion-content-border,
  $background: $accordion-content-background,
  $color: $accordion-content-color
) {
  display: none;
  padding: $padding;

  border: $border;
  border-bottom: 0;
  background-color: $background;

  color: $color;

  :last-child > &:last-child {
    border-bottom: $border;
  }

  > *:last-child {
    margin-bottom: 0;
  }
}